image: Visual Studio 2017
configuration: Release
platform: x64
clone_folder: C:\projects
  
install:
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - cd C:\projects
  # Get bison and flex, unzip it, rename it and add it to PATH
  - curl -L -o winflexbison.zip https://github.com/lexxmark/winflexbison/releases/download/v2.5.16/winflexbison-2.5.16.zip
  - 7z x winflexbison.zip -owinflexbison
  - cd winflexbison
  - copy win_flex.exe flex.exe
  - copy win_bison.exe bison.exe
  - cd ..
  - ps: $env:path="C:\projects\winflexbison;$($env:path)"
  # Get jom and add it to the path
  - curl -L -o jom.zip http://download.qt.io/official_releases/jom/jom.zip
  - 7z x jom.zip -ojom
  - ps: $env:path="C:\projects\jom;$($env:path)"
  # Get the precompiled openSSL libraries
  - curl -L -o openSSL.zip https://github.com/ChristianFeldmann/YUViewQt/releases/download/openSSL1.1.1/openSSL_1_1_1_stable.zip
  - 7z x openSSL.zip
  # Get Qt into a folder in which we build it
  - git clone --single-branch -b 5.11 https://github.com/qt/qtbase.git Qt_build --depth 1

build_script:
  # Build Qt
  - cd C:\projects\Qt_build
  - .\configure.bat -release -opensource -confirm-license -prefix "C:\projects\Qt" -opengl dynamic -platform win32-msvc2015 -openssl "-IC:\projects\openSSL\include" "-LC:\projects\openSSL" -nomake examples -nomake tests -no-direct2d
  - where nmake
  - where jom
  - jom
  # Install Qt to "C:\projects\Qt"
  - jom install
  - cd ..

after_build:
  # Pack all the libraries, dlls and include files into one zip
  - cd C:\projects
  - 7z Qt-5.11.zip Qt/bin Qt/include Qt/mkspecs

artifacts:
  - path: Qt-5.11.zip

deploy:
  provider: GitHub
  auth_token:
    secure: boWJ9aVfVBpOkBGzWF5yS5/Os3eDUjFfziOY04+LNA+7v+PnMFBtHeMJe2PjK4gm
  artifact: Qt-5.11.zip
  on:
    appveyor_repo_tag: true
