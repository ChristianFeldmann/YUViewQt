name: C/C++ CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include: 
          # - os: ubuntu-20.04
          #   OPEN_SSL_FILE: openSSL_1_1_1u_ubuntu20.zip
          #   UNZIP_COMMAND: unzip -qa
          #   ARTIFACT_NAME: qtBase_6.5.2_ubuntu20
          #   CONFIGURE_EXTRA: -DFEATURE_system_xcb_xinput=OFF
          #   PACKAGE_INSTALL_CALL: sudo apt install
          #   PACKAGE_DEPENDENCIES: build-essential '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev libatspi2.0-dev ninja-build
          # - os: ubuntu-22.04
          #   OPEN_SSL_FILE: openSSL_1_1_1u_ubuntu22.zip
          #   UNZIP_COMMAND: unzip -qa
          #   ARTIFACT_NAME: qtBase_6.0.2_bionic
          #   CONFIGURE_EXTRA: -DFEATURE_system_xcb_xinput=OFF
          #   PACKAGE_INSTALL_CALL: sudo apt install
          #   PACKAGE_DEPENDENCIES: build-essential '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev libatspi2.0-dev ninja-build
          - os: windows-2019
            OPEN_SSL_FILE: openSSL_1_1_1u_win2019.zip
            UNZIP_COMMAND: 7z x
            ARTIFACT_NAME: qtBase_6.5.2_win2019
          - os: windows-2022
            OPEN_SSL_FILE: openSSL_1_1_1u_win2022.zip
            UNZIP_COMMAND: 7z x
            ARTIFACT_NAME: qtBase_6.5.2_win2022
          # - os: macos-11
          #   OPEN_SSL_FILE: openSSL_1_1_1u_mac11.zip
          #   UNZIP_COMMAND: unzip -qa
          #   ARTIFACT_NAME: qtBase_6.5.2_mac
          #   CONFIGURE_EXTRA:
          # - os: macos-12
          #   OPEN_SSL_FILE: openSSL_1_1_1u_mac12.zip
          #   UNZIP_COMMAND: unzip -qa
          #   ARTIFACT_NAME: qtBase_6.5.2_mac
          #   CONFIGURE_EXTRA:
    steps:
    - uses: turtlesec-no/get-ninja@main
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Download precompiled openSSL (windows)
      run: |
        curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/openSSL1.1.1u/${{matrix.OPEN_SSL_FILE}} -o openSSL.zip
        7z x openSSL.zip -oopenSSL
      shell: cmd
      if: matrix.os == 'windows-2019' || matrix.os == 'windows-2022'
    - name: Download precompiled openSSL (mac/linux)
      run: |
        curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/openSSL1.1.1u/${{matrix.OPEN_SSL_FILE}} -o openSSL.zip
        unzip -qa openSSL.zip -d openSSL
      if: matrix.os != 'windows-2019' && matrix.os != 'windows-2022'
    - name: Download QtBase Sources
      run: |
        curl -L https://github.com/qt/qtbase/archive/v6.5.2.zip -o QtBase.zip
        ${{matrix.UNZIP_COMMAND}} QtBase.zip
        mv qtbase-6.5.2 Qt_build
    - name: Install Linux Dependencies
      run: ${{matrix.PACKAGE_INSTALL_CALL}} ${{matrix.PACKAGE_DEPENDENCIES}}
      if: matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04'
    - name: Build Windows
      run: |
        cd Qt_build
        mkdir .git
        cmake -DCMAKE_BUILD_TYPE=Release -G Ninja -DCMAKE_INSTALL_PREFIX="d:\\a\YUViewQt\\YUViewQt\\Qt" -DQT_BUILD_TESTS=OFF -DQT_BUILD_EXAMPLES=OFF -DINPUT_opengl=dynamic -DINPUT_openssl=runtime -DOPENSSL_ROOT_DIR="d:\\a\\YUViewQt\\YUViewQt\\openSSL" -DFEATURE_sql=OFF
        cmake --build . --parallel 2
        cmake --install .
        cd ..
        7z a -r ${{matrix.ARTIFACT_NAME}}.zip Qt
        dir
      shell: cmd
      if: matrix.os == 'windows-2019' || matrix.os == 'windows-2022'
    - name: Build Mac/Linux
      run: |
        cd Qt_build
        mkdir .git
        cmake -DCMAKE_BUILD_TYPE=Release -G Ninja -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/Qt -DQT_BUILD_TESTS=OFF -DQT_BUILD_EXAMPLES=OFF -DINPUT_openssl=runtime -DOPENSSL_ROOT_DIR=${GITHUB_WORKSPACE}/openSSL/ ${{matrix.CONFIGURE_EXTRA}}
        cmake --build . --parallel 2
        cmake --install .
        cd ..
        zip -r ${{matrix.ARTIFACT_NAME}}.zip Qt
        ls
      if: matrix.os != 'windows-2019' && matrix.os != 'windows-2022'
    # - name: Upload Artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: ${{matrix.ARTIFACT_NAME}}
    #     path: ${{matrix.ARTIFACT_NAME}}.zip
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{matrix.ARTIFACT_NAME}}.zip

  # How to upload files to the release:
  # https://github.com/Blacksmoke16/oq/pull/47/files#diff-082c28d748ad2e3eecc5508d740d9417R9-R29
  # This is something but is looks ugly
  # https://github.com/actions/upload-release-asset/issues/17