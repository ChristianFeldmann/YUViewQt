name: C/C++ CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include: 
          # - os: ubuntu-16.04
          #   OPEN_SSL_FILE: openSSL_1_1_1g_ubuntu_xenial.zip
          #   UNZIP_COMMAND: unzip -qa
          #   ZIP_COMMAND: zip -r
          #   ARTIFACT_NAME: qtBase_5.14.2_xenial
          #   CONFIGURE_EXTRA: -qt-xcb
          # - os: ubuntu-18.04
          #   OPEN_SSL_FILE: openSSL_1_1_1g_ubuntu_bionic.zip
          #   UNZIP_COMMAND: unzip -qa
          #   ZIP_COMMAND: zip -r
          #   ARTIFACT_NAME: qtBase_5.14.2_bionic
          #   CONFIGURE_EXTRA: -qt-xcb
          - os: windows-2019
            UNZIP_COMMAND: 7z x
            ZIP_COMMAND: 7z a -r
            ARTIFACT_NAME: qtBase_5.14.2_win
          # - os: macos-10.15
          #   OPEN_SSL_FILE: openSSL_1_1_1g_mac.zip
          #   UNZIP_COMMAND: unzip -qa
          #   ZIP_COMMAND: zip -r
          #   ARTIFACT_NAME: qtBase_5.14.2_mac
          #   CONFIGURE_EXTRA: 
    steps:
    - name: Download precompiled openSSL (windows)
      run: |
        curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/openSSL1.1.1g/openSSL_1_1_1g_win.zip -o openSSL.zip
        7z x openSSL.zip -oopenSSL
      shell: cmd
      if: matrix.os == 'windows-2019'
    - name: Download precompiled openSSL (other)
      run: |
        curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/openSSL1.1.1g/${{matrix.OPEN_SSL_FILE}} -o openSSL.zip
        unzip -qa openSSL.zip -d openSSL
      if: matrix.os != 'windows-2019'
    - name: Download QtBase Sources
      run: |
        curl -L https://github.com/qt/qtbase/archive/v5.14.2.zip -o QtBase.zip
        ${{matrix.UNZIP_COMMAND}} QtBase.zip
        mv qtbase-5.14.2 Qt_build
    - name: Install windows dependencies
      run: |
        choco install winflexbison3
        choco install jom
      shell: cmd
      if: matrix.os == 'windows-2019'
    - name: Install Linux Dependencies
      run: sudo apt install build-essential '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev libatspi2.0-dev
      if: matrix.os == 'ubuntu-16.04' || matrix.os == 'ubuntu-18.04'
    - name: Build Windows
      run: |
        dir
        cd Qt_build
        mkdir .git
        copy C:\ProgramData\chocolatey\bin\win_flex.exe C:\ProgramData\chocolatey\bin\flex.exe
        copy C:\ProgramData\chocolatey\bin\win_bison.exe C:\ProgramData\chocolatey\bin\bison.exe
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        echo call .\configure.bat -release -opensource -confirm-license -prefix "${GITHUB_WORKSPACE}\build\Qt" -opengl dynamic -platform win32-msvc2015 -openssl "-I${GITHUB_WORKSPACE}\openSSL\include" "-L${GITHUB_WORKSPACE}\openSSL" -nomake examples -nomake tests -no-feature-sql -no-direct2d
        call .\configure.bat -release -opensource -confirm-license -prefix "${GITHUB_WORKSPACE}\build\Qt" -opengl dynamic -platform win32-msvc2015 -openssl "-I${GITHUB_WORKSPACE}\openSSL\include" "-L${GITHUB_WORKSPACE}\openSSL" -nomake examples -nomake tests -no-feature-sql -no-direct2d
        jom
        jom install
      shell: cmd
      if: matrix.os == 'windows-2019'
    - name: Build Mac/Linux
      run: |
        cd Qt_build
        mkdir .git
        ./configure -release -opensource -confirm-license -prefix ${GITHUB_WORKSPACE}/Qt_install -openssl -I ${GITHUB_WORKSPACE}/openSSL/include/ -L ${GITHUB_WORKSPACE}/openSSL/ -nomake examples ${{matrix.CONFIGURE_EXTRA}}
        make -j 2
        make install
        cd ..
        mkdir Qt
        cp -R Qt_install/bin Qt_install/lib Qt_install/include Qt_install/mkspecs Qt_install/plugins Qt
      if: matrix.os != 'windows-2019'
    - name: Zip files
      run: |
        ${{matrix.ZIP_COMMAND}} ${{matrix.ARTIFACT_NAME}}.zip Qt
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.ARTIFACT_NAME}}
        path: ${{matrix.ARTIFACT_NAME}}.zip
    
    # - name: Upload
    #   uses: actions/upload-release-asset@v1.0.1
    #   env:
    #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    #   with:
    #     upload_url: ${{github.event.release.upload_url}}
    #     asset_path: ${{matrix.ARTIFACT_NAME}}.zip
    #     asset_name: ${{matrix.ARTIFACT_NAME}}.zip
    #     asset_content_type: application/zip
    #   if: github.event_name == 'release'

  # How to upload files to the release:
  # https://github.com/Blacksmoke16/oq/pull/47/files#diff-082c28d748ad2e3eecc5508d740d9417R9-R29
  # This is something but is looks ugly
  # https://github.com/actions/upload-release-asset/issues/17