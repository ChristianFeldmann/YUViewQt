name: C/C++ CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'ubuntu-22.04', 'windows-2019', 'windows-2022', 'macos-11', 'macos-12']
        include: 
          - os: ubuntu-20.04
            ARTIFACT_NAME: openSSL_1_1_1u_ubuntu20
            UNZIP_COMMAND: unzip -qa
            ZIP_COMMAND: zip -r
          - os: ubuntu-22.04
            ARTIFACT_NAME: openSSL_1_1_1u_ubuntu22
            UNZIP_COMMAND: unzip -qa
            ZIP_COMMAND: zip -r
          - os: windows-2019
            ARTIFACT_NAME: openSSL_1_1_1u_win2019
            UNZIP_COMMAND: 7z x
            ZIP_COMMAND: 7z a -r
          - os: windows-2022
            ARTIFACT_NAME: openSSL_1_1_1u_win2022
            UNZIP_COMMAND: 7z x
            ZIP_COMMAND: 7z a -r
          - os: macos-11
            ARTIFACT_NAME: openSSL_1_1_1u_mac11
            UNZIP_COMMAND: unzip -qa
            ZIP_COMMAND: zip -r
          - os: macos-12
            ARTIFACT_NAME: openSSL_1_1_1u_mac12
            UNZIP_COMMAND: unzip -qa
            ZIP_COMMAND: zip -r
    steps:
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: ilammy/setup-nasm@v1
      - name: Download sources
        run: |
          curl -L https://github.com/openssl/openssl/archive/OpenSSL_1_1_1u.zip -o openSSL.zip
          ${{matrix.UNZIP_COMMAND}} openSSL.zip
          mv openssl-OpenSSL_1_1_1u openSSL
      - name: Install windows dependencies
        run: |
          choco install strawberryperl
          perl --version
          set CC=
          set CC_FOR_BUILD=
          set CXX=
          set CXX_FOR_BUILD=
        shell: cmd
        if: matrix.os == 'windows-2019' || matrix.os == 'windows-2022'
      - name: Build Windows
        run: |
          cd openSSL
          set PATH=%PATH%;"C:\Program Files\NASM"
          C:\Strawberry\perl\bin\perl.exe Configure VC-WIN64A
          nmake
          cd ..
          mkdir artifact
          robocopy openSSL\include artifact\include /e
          copy openSSL\libcrypto-1_1-x64.dll artifact
          copy openSSL\libcrypto.lib artifact
          copy openSSL\libssl-1_1-x64.dll artifact
          copy openSSL\libssl.lib artifact
        shell: cmd
        if: matrix.os == 'windows-2019' || matrix.os == 'windows-2022'
      - name: Build Mac
        run: |
          mkdir dist
          cd openSSL
          pwd
          ls
          ./Configure --prefix=$PWD/dist no-idea no-mdc2 no-rc5 shared darwin64-x86_64-cc
          make depend
          make -j 2
          cd ..
          mkdir artifact
          cp -R openSSL/include artifact
          cp openSSL/libcrypto.1.1.dylib openSSL/libcrypto.a openSSL/libcrypto.dylib openSSL/libssl.1.1.dylib openSSL/libssl.a openSSL/libssl.dylib artifact
        if: matrix.os == 'macos-11' || matrix.os == 'macos-12'
      - name: Build Linux
        run: |
          mkdir dist
          pwd
          ls
          cd openSSL
          pwd
          ls
          ./Configure --prefix=$PWD/dist no-idea no-mdc2 no-rc5 shared linux-x86_64
          make depend
          make -j 2
          cd ..
          mkdir artifact
          cp -R openSSL/include artifact
          cp openSSL/libcrypto.* openSSL/libssl.* artifact
        if: matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04'
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.ARTIFACT_NAME}}
          path: artifact
      - name: Zip files
        run: |
          cd artifact
          ${{matrix.ZIP_COMMAND}} ../${{matrix.ARTIFACT_NAME}}.zip *
          cd ..
      - name: Upload
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{github.event.release.upload_url}}
          asset_path: ${{matrix.ARTIFACT_NAME}}.zip
          asset_name: ${{matrix.ARTIFACT_NAME}}.zip
          asset_content_type: application/zip
        if: github.event_name == 'release'

  # How to upload files to the release:
  # https://github.com/Blacksmoke16/oq/pull/47/files#diff-082c28d748ad2e3eecc5508d740d9417R9-R29
  # This is something but is looks ugly
  # https://github.com/actions/upload-release-asset/issues/17